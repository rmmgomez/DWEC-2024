{"version":3,"file":"index.cjs.js","sources":["../src/autocomplete.ts"],"sourcesContent":["\nimport countiesData from \"./countries.json\";\n\nexport class GeocoderAutocomplete {\n\n    private inputElement: HTMLInputElement;\n    private inputClearButton: HTMLElement;\n    private autocompleteItemsElement: HTMLElement = null;\n\n    /* Focused item in the autocomplete list. This variable is used to navigate with buttons */\n    private focusedItemIndex: number;\n\n    /* Current autocomplete items data (GeoJSON.Feature) */\n    private currentItems: any;\n\n    /* Active request promise reject function. To be able to cancel the promise when a new request comes */\n    private currentPromiseReject: any;\n\n    /* Active place details request promise reject function */\n    private currentPlaceDetailsPromiseReject: any;\n\n    /* We set timeout before sending a request to avoid unnecessary calls */\n    private currentTimeout: number;\n\n    private changeCallbacks: ((selectedOption: any) => void)[] = [];\n    private suggestionsChangeCallbacks: ((options: any[]) => void)[] = [];\n    private inputCallbacks: ((input: string) => void)[] = [];\n    private openCallbacks: ((opened: boolean) => void)[] = [];\n    private closeCallbacks: ((opened: boolean) => void)[] = [];\n\n    private preprocessHook?: (value: string) => string;\n    private postprocessHook?: (feature: any) => string;\n    private suggestionsFilter?: (suggetions: any[]) => any[];\n\n    private sendGeocoderRequestAlt?: (value: string, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>;\n    private sendPlaceDetailsRequestAlt?: (feature: any, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>;\n\n    private geocoderUrl = \"https://api.geoapify.com/v1/geocode/autocomplete\";\n    private placeDetailsUrl = \"https://api.geoapify.com/v2/place-details\";\n\n    private options: GeocoderAutocompleteOptions = {\n        limit: 5,\n        debounceDelay: 100\n    };\n\n    private BY_COUNTRYCODE = 'countrycode';\n    private BY_RECT = 'rect';\n    private BY_CIRCLE = 'circle';\n    private BY_PROXIMITY = 'proximity';\n    private BY_PLACE = 'place';\n\n    constructor(private container: HTMLElement, private apiKey: string, options?: GeocoderAutocompleteOptions) {\n        this.options = options ? { ...this.options, ...options } : this.options;\n        this.options.filter = this.options.filter || {};\n        this.options.bias = this.options.bias || {};\n\n        if (this.options.countryCodes) {\n            this.addFilterByCountry(this.options.countryCodes);\n        }\n\n        if (this.options.position) {\n            this.addBiasByProximity(this.options.position);\n        }\n\n        // create input element\n        this.inputElement = document.createElement(\"input\");\n        this.inputElement.classList.add(\"geoapify-autocomplete-input\");\n        this.inputElement.setAttribute(\"type\", \"text\");\n        this.inputElement.setAttribute(\"placeholder\", this.options.placeholder || \"Enter an address here\");\n        this.container.appendChild(this.inputElement);\n\n        // add clear button to input element\n        this.inputClearButton = document.createElement(\"div\");\n        this.inputClearButton.classList.add(\"geoapify-close-button\");\n        this.addIcon(this.inputClearButton, 'close');\n        this.inputClearButton.addEventListener(\"click\", this.clearFieldAndNotify.bind(this), false);\n\n        this.container.appendChild(this.inputClearButton);\n\n        this.inputElement.addEventListener('input', this.onUserInput.bind(this), false);\n        this.inputElement.addEventListener('keydown', this.onUserKeyPress.bind(this), false);\n\n        document.addEventListener(\"click\", (event) => {\n            if (event.target !== this.inputElement) {\n                this.closeDropDownList();\n            } else if (!this.autocompleteItemsElement) {\n                // open dropdown list again\n                this.openDropdownAgain();\n            }\n        });\n    }\n\n    public setType(type: 'country' | 'state' | 'city' | 'postcode' | 'street' | 'amenity') {\n        this.options.type = type;\n    }\n\n    public setLang(lang: SupportedLanguage) {\n        this.options.lang = lang;\n    }\n\n    public setCountryCodes(codes: CountyCode[]) {\n        console.warn(\"WARNING! Obsolete function called. Function setCountryCodes() has been deprecated, please use the new addFilterByCountry() function instead!\");\n        this.options.countryCodes = codes;\n    }\n\n    public setPosition(position: GeoPosition) {\n        console.warn(\"WARNING! Obsolete function called. Function setPosition() has been deprecated, please use the new addBiasByProximity() function instead!\");\n        this.options.position = position;\n    }\n\n    public setLimit(limit: number) {\n        this.options.limit = limit;\n    }\n\n    public setValue(value: string) {\n        if (!value) {\n            this.inputClearButton.classList.remove(\"visible\");\n        } else {\n            this.inputClearButton.classList.add(\"visible\");\n        }\n\n        this.inputElement.value = value;\n    }\n\n    public getValue() {\n        return this.inputElement.value;\n    }\n\n    public addFilterByCountry(codes: ByCountryCodeOptions) {\n        this.options.filter[this.BY_COUNTRYCODE] = codes;\n    }\n\n    public addFilterByCircle(filterByCircle: ByCircleOptions) {\n        this.options.filter[this.BY_CIRCLE] = filterByCircle;\n    }\n\n    public addFilterByRect(filterByRect: ByRectOptions) {\n        this.options.filter[this.BY_RECT] = filterByRect;\n    }\n\n    public addFilterByPlace(filterByPlace: string) {\n        this.options.filter[this.BY_PLACE] = filterByPlace;\n    }\n\n    public clearFilters() {\n        this.options.filter = {};\n    }\n\n    public addBiasByCountry(codes: ByCountryCodeOptions) {\n        this.options.bias[this.BY_COUNTRYCODE] = codes;\n    }\n\n    public addBiasByCircle(biasByCircle: ByCircleOptions) {\n        this.options.bias[this.BY_CIRCLE] = biasByCircle;\n    }\n\n    public addBiasByRect(biasByRect: ByRectOptions) {\n        this.options.bias[this.BY_RECT] = biasByRect;\n    }\n\n    public addBiasByProximity(biasByProximity: ByProximityOptions) {\n        this.options.bias[this.BY_PROXIMITY] = biasByProximity;\n    }\n\n    public clearBias() {\n        this.options.bias = {};\n    }\n\n    public on(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback: (param: any) => void) {\n        if (operation === 'select' && this.changeCallbacks.indexOf(callback) < 0) {\n            this.changeCallbacks.push(callback);\n        }\n\n        if (operation === 'suggestions' && this.suggestionsChangeCallbacks.indexOf(callback) < 0) {\n            this.suggestionsChangeCallbacks.push(callback);\n        }\n\n        if (operation === 'input' && this.inputCallbacks.indexOf(callback) < 0) {\n            this.inputCallbacks.push(callback);\n        }\n\n        if (operation === 'close' && this.closeCallbacks.indexOf(callback) < 0) {\n            this.closeCallbacks.push(callback);\n        }\n\n        if (operation === 'open' && this.openCallbacks.indexOf(callback) < 0) {\n            this.openCallbacks.push(callback);\n        }\n    }\n\n    public off(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback?: (param: any) => any) {\n        if (operation === 'select' && this.changeCallbacks.indexOf(callback) >= 0) {\n            this.changeCallbacks.splice(this.changeCallbacks.indexOf(callback), 1);\n        } else if (operation === 'select' && !callback) {\n            this.changeCallbacks = [];\n        }\n\n        if (operation === 'suggestions' && this.suggestionsChangeCallbacks.indexOf(callback) >= 0) {\n            this.suggestionsChangeCallbacks.splice(this.suggestionsChangeCallbacks.indexOf(callback), 1);\n        } else if (operation === 'suggestions' && !callback) {\n            this.suggestionsChangeCallbacks = [];\n        }\n\n        if (operation === 'input' && this.inputCallbacks.indexOf(callback) >= 0) {\n            this.inputCallbacks.splice(this.inputCallbacks.indexOf(callback), 1);\n        } else if (operation === 'input' && !callback) {\n            this.inputCallbacks = [];\n        }\n\n        if (operation === 'close' && this.closeCallbacks.indexOf(callback) >= 0) {\n            this.closeCallbacks.splice(this.closeCallbacks.indexOf(callback), 1);\n        } else if (operation === 'close' && !callback) {\n            this.closeCallbacks = [];\n        }\n\n        if (operation === 'open' && this.openCallbacks.indexOf(callback) >= 0) {\n            this.openCallbacks.splice(this.openCallbacks.indexOf(callback), 1);\n        } else if (operation === 'open' && !callback) {\n            this.openCallbacks = [];\n        }\n    }\n\n    public once(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback: (param: any) => any) {\n        this.on(operation, callback);\n\n        const current = this;\n        const currentListener = () => {\n            current.off(operation, callback);\n            current.off(operation, currentListener);\n        }\n\n        this.on(operation, currentListener);\n    }\n\n    public setSuggestionsFilter(suggestionsFilterFunc?: (suggestions: any[]) => any[]) {\n        if (suggestionsFilterFunc && typeof suggestionsFilterFunc === 'function') {\n            this.suggestionsFilter = suggestionsFilterFunc;\n        } else {\n            this.suggestionsFilter = null;\n        }\n    }\n\n    public setPreprocessHook(preprocessHookFunc?: (value: string) => string) {\n        if (preprocessHookFunc && typeof preprocessHookFunc === 'function') {\n            this.preprocessHook = preprocessHookFunc;\n        } else {\n            this.preprocessHook = null;\n        }\n    }\n\n    public setPostprocessHook(postprocessHookFunc?: (value: string) => string) {\n        if (postprocessHookFunc && typeof postprocessHookFunc === 'function') {\n            this.postprocessHook = postprocessHookFunc;\n        } else {\n            this.postprocessHook = null;\n        }\n    }\n\n    public setSendGeocoderRequestFunc(sendGeocoderRequestFunc: (value: string, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>) {\n        if (sendGeocoderRequestFunc && typeof sendGeocoderRequestFunc === 'function') {\n            this.sendGeocoderRequestAlt = sendGeocoderRequestFunc;\n        } else {\n            this.sendGeocoderRequestAlt = null;\n        }\n    }\n\n    public setSendPlaceDetailsRequestFunc(sendPlaceDetailsRequestFunc: (feature: any, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>) {\n        if (sendPlaceDetailsRequestFunc && typeof sendPlaceDetailsRequestFunc === 'function') {\n            this.sendPlaceDetailsRequestAlt = sendPlaceDetailsRequestFunc;\n        } else {\n            this.sendPlaceDetailsRequestAlt = null;\n        }\n    }\n\n    public isOpen(): boolean {\n        return !!this.autocompleteItemsElement;\n    }\n\n    public close() {\n        this.closeDropDownList();\n    }\n\n    public open() {\n        if (!this.isOpen()) {\n            this.openDropdownAgain();\n        }\n    }\n\n    public sendGeocoderRequest(value: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.currentPromiseReject = reject;\n\n            let url = this.generateUrl(value);\n\n            fetch(url)\n                .then((response) => {\n                    if (response.ok) {\n                        response.json().then(data => resolve(data));\n                    } else {\n                        response.json().then(data => reject(data));\n                    }\n                });\n        });\n    }\n\n    public sendPlaceDetailsRequest(feature: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            if (feature.properties.datasource?.sourcename !== 'openstreetmap' || !feature.properties.place_id) {\n                // only OSM data has detailed information; return the original object if the source is different from OSM\n                resolve(feature);\n                return;\n            }\n            \n            this.currentPlaceDetailsPromiseReject = reject;\n            let url = this.generatePlacesUrlUrl(feature.properties.place_id);\n\n            fetch(url)\n                .then((response) => {\n                    if (response.ok) {\n                        response.json().then(data => {\n                            if (!data.features.length) {\n                                resolve(feature);\n                            }\n\n                            resolve(data.features[0]);\n                        });\n                    } else {\n                        response.json().then(data => reject(data));\n                    }\n                });\n        });\n    }\n\n    /* Execute a function when someone writes in the text field: */\n    onUserInput(event: Event) {\n        let currentValue = this.inputElement.value;\n        let userEnteredValue = this.inputElement.value;\n\n        this.inputCallbacks.forEach(callback => callback(currentValue));\n\n        /* Close any already open dropdown list */\n        this.closeDropDownList();\n\n        this.focusedItemIndex = -1;\n\n        // Cancel previous request\n        if (this.currentPromiseReject) {\n            this.currentPromiseReject({\n                canceled: true\n            });\n            this.currentPromiseReject = null;\n        }\n\n        // Cancel previous timeout\n        if (this.currentTimeout) {\n            window.clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n\n        if (!currentValue) {\n            this.inputClearButton.classList.remove(\"visible\");\n            return false;\n        }\n\n        // Show clearButton when there is a text\n        this.inputClearButton.classList.add(\"visible\");\n\n\n        this.currentTimeout = window.setTimeout(() => {\n            /* Create a new promise and send geocoding request */\n            if (this.preprocessHook && typeof this.preprocessHook === 'function') {\n                currentValue = this.preprocessHook(currentValue);\n            }\n\n            let promise;\n\n            if (this.sendGeocoderRequestAlt) {\n                promise = this.sendGeocoderRequestAlt(currentValue, this);\n            } else {\n                promise = this.sendGeocoderRequest(currentValue);\n            }\n\n            promise.then((data: any) => {\n\n                if (data.features && data.features.length &&\n                    data?.query?.parsed &&\n                    (this.options.allowNonVerifiedHouseNumber || this.options.allowNonVerifiedStreet)) {\n\n                    this.extendByNonVerifiedValues(data.features, data?.query?.parsed);\n                }\n\n                this.currentItems = data.features;\n\n                if (this.currentItems && this.currentItems.length && this.suggestionsFilter && typeof this.suggestionsFilter === 'function') {\n                    this.currentItems = this.suggestionsFilter(this.currentItems);\n                }\n\n                this.notifySuggestions(this.currentItems);\n\n                if (!this.currentItems.length) {\n                    return;\n                }\n\n                /*create a DIV element that will contain the items (values):*/\n                this.autocompleteItemsElement = document.createElement(\"div\");\n                this.autocompleteItemsElement.setAttribute(\"class\", \"geoapify-autocomplete-items\");\n\n                this.notifyOpened();\n\n                /* Append the DIV element as a child of the autocomplete container:*/\n                this.container.appendChild(this.autocompleteItemsElement);\n                /* For each item in the results */\n                this.currentItems.forEach((feature: any, index: number) => {\n                    /* Create a DIV element for each element: */\n                    const itemElement = document.createElement(\"div\");\n                    itemElement.classList.add('geoapify-autocomplete-item');\n\n\n                    if (!this.options.skipIcons) {\n                        const iconElement = document.createElement(\"span\");\n                        iconElement.classList.add('icon');\n\n                        this.addFeatureIcon(iconElement, feature.properties.result_type, feature.properties.country_code);\n\n                        itemElement.appendChild(iconElement);\n                    }\n\n                    const textElement = document.createElement(\"span\");\n                    textElement.classList.add('address');\n\n                    if (this.postprocessHook && typeof this.postprocessHook === 'function') {\n                        const value = this.postprocessHook(feature);\n                        textElement.innerHTML = this.getStyledAddressSingleValue(value, userEnteredValue);\n                    } else {\n                        textElement.innerHTML = this.getStyledAddress(feature.properties, userEnteredValue);\n                    }\n\n                    itemElement.appendChild(textElement);\n\n                    itemElement.addEventListener(\"click\", (e) => {\n                        event.stopPropagation();\n                        this.setValueAndNotify(this.currentItems[index])\n                    });\n                    this.autocompleteItemsElement.appendChild(itemElement);\n                });\n            }, (err) => {\n                if (!err.canceled) {\n                    console.log(err);\n                }\n            });\n        }, this.options.debounceDelay);\n    }\n\n    private addHouseNumberToFormatted(featureProperties: any, street: string, housenumber: string) {\n        const houseNumberAndStreetFormatsPerCountry: { [key: string]: string[] } = {\n            \"{{{road}}} {{{house_number}}}\": [\"af\", \"ai\", \"al\", \"ao\", \"ar\", \"at\", \"aw\", \"ax\", \"ba\", \"be\", \"bg\", \"bi\", \"bo\", \"bq\", \"br\", \"bs\", \"bt\", \"bv\", \"bw\", \"cf\", \"ch\", \"cl\", \"cm\", \"co\", \"cr\", \"cu\", \"cv\", \"cw\", \"cy\", \"cz\", \"de\", \"dk\", \"do\", \"ec\", \"ee\", \"eh\", \"er\", \"et\", \"fi\", \"fo\", \"gd\", \"ge\", \"gl\", \"gq\", \"gr\", \"gt\", \"gw\", \"hn\", \"hr\", \"ht\", \"hu\", \"id\", \"il\", \"ir\", \"is\", \"jo\", \"ki\", \"km\", \"kp\", \"kw\", \"lc\", \"li\", \"lr\", \"lt\", \"lv\", \"ly\", \"me\", \"mk\", \"ml\", \"mn\", \"mo\", \"mx\", \"ni\", \"nl\", \"no\", \"np\", \"pa\", \"pe\", \"pl\", \"ps\", \"pt\", \"pw\", \"py\", \"qa\", \"ro\", \"rs\", \"ru\", \"sb\", \"sd\", \"se\", \"si\", \"sj\", \"sk\", \"so\", \"sr\", \"ss\", \"st\", \"sv\", \"sx\", \"sz\", \"td\", \"tj\", \"tl\", \"tr\", \"um\", \"uz\", \"uy\", \"vc\", \"ve\", \"vu\", \"ws\"],\n            \"{{{house_number}}} {{{road}}}\": [\"ad\", \"ae\", \"ag\", \"am\", \"as\", \"au\", \"az\", \"bb\", \"bd\", \"bf\", \"bh\", \"bl\", \"bm\", \"bz\", \"ca\", \"cc\", \"ci\", \"ck\", \"cn\", \"cx\", \"dj\", \"dm\", \"dz\", \"eg\", \"fj\", \"fk\", \"fm\", \"fr\", \"ga\", \"gb\", \"gf\", \"gg\", \"gh\", \"gi\", \"gm\", \"gn\", \"gp\", \"gs\", \"gu\", \"gy\", \"hk\", \"hm\", \"ie\", \"im\", \"io\", \"iq\", \"je\", \"jm\", \"jp\", \"ke\", \"kh\", \"kn\", \"kr\", \"ky\", \"lb\", \"lk\", \"ls\", \"lu\", \"ma\", \"mc\", \"mf\", \"mh\", \"mg\", \"mm\", \"mp\", \"ms\", \"mt\", \"mq\", \"mv\", \"mw\", \"my\", \"na\", \"nc\", \"ne\", \"nf\", \"ng\", \"nr\", \"nu\", \"nz\", \"om\", \"pf\", \"pg\", \"ph\", \"pk\", \"pm\", \"pr\", \"re\", \"rw\", \"sa\", \"sc\", \"sg\", \"sh\", \"sl\", \"sn\", \"tc\", \"tf\", \"th\", \"tk\", \"tn\", \"to\", \"tt\", \"tv\", \"tw\", \"tz\", \"ug\", \"us\", \"vg\", \"vi\", \"wf\", \"yt\", \"za\", \"zm\", \"zw\"],\n            \"{{{road}}}, {{{house_number}}}\": [\"by\", \"es\", \"it\", \"kg\", \"kz\", \"md\", \"mz\", \"sm\", \"sy\", \"ua\", \"va\"],\n            \"{{{house_number}}}, {{{road}}}\": [\"bj\", \"bn\", \"cd\", \"cg\", \"in\", \"la\", \"mr\", \"mu\", \"tg\", \"tm\", \"vn\", \"ye\"]\n        }\n\n        const format = Object.keys(houseNumberAndStreetFormatsPerCountry).find(key => houseNumberAndStreetFormatsPerCountry[key].indexOf(featureProperties.country_code) >= 0) || \"{{{road}}} {{{house_number}}}\";\n\n        if (street) {\n            // add street and housenumber\n            featureProperties.street = street.replace(/(^\\w|\\s\\w|[-]\\w)/g, m => m.toUpperCase());\n\n            featureProperties.housenumber = housenumber;\n            const addressPart = format.replace(\"{{{road}}}\", featureProperties.street).replace(\"{{{house_number}}}\", housenumber);\n            featureProperties.address_line1 = addressPart;\n            featureProperties.address_line2 = featureProperties.formatted;\n\n            featureProperties.formatted = addressPart + \", \" + featureProperties.formatted;\n        } else {\n            // add house number only\n            featureProperties.housenumber = housenumber;\n            const addressPart = format.replace(\"{{{road}}}\", featureProperties.street).replace(\"{{{house_number}}}\", housenumber);\n\n            featureProperties.address_line1 = featureProperties.address_line1.replace(featureProperties.street, addressPart);;\n            featureProperties.formatted = featureProperties.formatted.replace(featureProperties.street, addressPart);\n        }\n    }\n\n    private extendByNonVerifiedValues(features: any, parsedAddress: any) {\n        features.forEach((feature: any) => {\n            if (parsedAddress.housenumber &&\n                this.options.allowNonVerifiedHouseNumber && feature.properties.rank.match_type === \"match_by_street\") {\n                // add housenumber\n                this.addHouseNumberToFormatted(feature.properties, null, parsedAddress.housenumber)\n                feature.properties.nonVerifiedParts = [\"housenumber\"];\n            } else if (parsedAddress.street && parsedAddress.housenumber &&\n                this.options.allowNonVerifiedStreet &&\n                (feature.properties.rank.match_type === \"match_by_city_or_disrict\" || feature.properties.rank.match_type === \"match_by_postcode\")) {\n                // add housenumber and street\n                this.addHouseNumberToFormatted(feature.properties, parsedAddress.street, parsedAddress.housenumber)\n                feature.properties.nonVerifiedParts = [\"housenumber\", \"street\"];\n            } else if (parsedAddress.street &&\n                this.options.allowNonVerifiedStreet &&\n                (feature.properties.rank.match_type === \"match_by_city_or_disrict\" || feature.properties.rank.match_type === \"match_by_postcode\")) {\n                // add street\n                feature.properties.street = parsedAddress.street.replace(/(^\\w|\\s\\w|[-]\\w)/g, (m: string) => m.toUpperCase());\n\n                feature.properties.address_line1 = feature.properties.street;\n                feature.properties.address_line2 = feature.properties.formatted;\n\n                feature.properties.formatted = feature.properties.street + \", \" + feature.properties.formatted;\n                feature.properties.nonVerifiedParts = [\"street\"];\n            }\n        });\n    }\n\n    private getStyledAddressSingleValue(value: string, currentValue: string): string {\n        let displayValue = value;\n\n        const valueIndex = (displayValue || '').toLowerCase().indexOf(currentValue.toLowerCase());\n        if (valueIndex >= 0) {\n            displayValue = displayValue.substring(0, valueIndex) +\n                `<strong>${displayValue.substring(valueIndex, valueIndex + currentValue.length)}</strong>` +\n                displayValue.substring(valueIndex + currentValue.length);\n        }\n\n        return `<span class=\"main-part\">${displayValue}</span>`\n    }\n\n    private getStyledAddress(featureProperties: any, currentValue: string): string {\n        let mainPart: string;\n        let secondaryPart: string;\n        const parts = featureProperties.formatted.split(',').map((part: string) => part.trim());\n\n        if (featureProperties.name) {\n            mainPart = parts[0];\n            secondaryPart = parts.slice(1).join(', ');\n        } else {\n            const mainElements = Math.min(2, Math.max(parts.length - 2, 1));\n            mainPart = parts.slice(0, mainElements).join(', ');\n            secondaryPart = parts.slice(mainElements).join(', ');\n        }\n\n        if (featureProperties.nonVerifiedParts && featureProperties.nonVerifiedParts.length) {\n            featureProperties.nonVerifiedParts.forEach((part: string) => {\n                mainPart = mainPart.replace(featureProperties[part], `<span class=\"non-verified\">${featureProperties[part]}</span>`);\n            });\n        } else {\n            const valueIndex = mainPart.toLowerCase().indexOf(currentValue.toLowerCase());\n            if (valueIndex >= 0) {\n                mainPart = mainPart.substring(0, valueIndex) +\n                    `<strong>${mainPart.substring(valueIndex, valueIndex + currentValue.length)}</strong>` +\n                    mainPart.substring(valueIndex + currentValue.length);\n\n            }\n        }\n\n        return `<span class=\"main-part\">${mainPart}</span><span class=\"secondary-part\">${secondaryPart}</span>`\n    }\n\n    private onUserKeyPress(event: KeyboardEvent) {\n        if (this.autocompleteItemsElement) {\n\n            const itemElements: HTMLCollectionOf<HTMLDivElement> = this.autocompleteItemsElement.getElementsByTagName(\"div\");\n            if (event.code === 'ArrowDown') {\n                event.preventDefault();\n\n                /*If the arrow DOWN key is pressed, increase the focusedItemIndex variable:*/\n                this.focusedItemIndex++;\n                if (this.focusedItemIndex >= itemElements.length) this.focusedItemIndex = 0;\n                /*and and make the current item more visible:*/\n                this.setActive(itemElements, this.focusedItemIndex);\n            } else if (event.code === 'ArrowUp') {\n                event.preventDefault();\n\n                /*If the arrow UP key is pressed, decrease the focusedItemIndex variable:*/\n                this.focusedItemIndex--;\n                if (this.focusedItemIndex < 0) this.focusedItemIndex = (itemElements.length - 1);\n                /*and and make the current item more visible:*/\n                this.setActive(itemElements, this.focusedItemIndex);\n            } else if (event.code === \"Enter\") {\n                /* If the ENTER key is pressed and value as selected, close the list*/\n                event.preventDefault();\n                if (this.focusedItemIndex > -1) {\n                    if (this.options.skipSelectionOnArrowKey) {\n                        // select the location if it wasn't selected by navigation\n                        this.setValueAndNotify(this.currentItems[this.focusedItemIndex]);\n                    } else {\n                        this.closeDropDownList();\n                    }\n                }\n            } else if (event.code === \"Escape\") {\n                /* If the ESC key is presses, close the list */\n                this.closeDropDownList();\n            }\n        } else {\n            if (event.code == 'ArrowDown') {\n                /* Open dropdown list again */\n                this.openDropdownAgain();\n            }\n        }\n    }\n\n    private setActive(items: HTMLCollectionOf<HTMLDivElement>, index: number) {\n        if (!items || !items.length) return false;\n\n        for (var i = 0; i < items.length; i++) {\n            items[i].classList.remove(\"active\");\n        }\n\n        /* Add class \"autocomplete-active\" to the active element*/\n        items[index].classList.add(\"active\");\n\n        if (!this.options.skipSelectionOnArrowKey) {\n            // Change input value and notify\n            if (this.postprocessHook && typeof this.postprocessHook === 'function') {\n                this.inputElement.value = this.postprocessHook(this.currentItems[index]);\n            } else {\n                this.inputElement.value = this.currentItems[index].properties.formatted;\n            }\n            this.notifyValueSelected(this.currentItems[index]);\n        }\n    }\n\n\n    private setValueAndNotify(feature: any) {\n        if (this.postprocessHook && typeof this.postprocessHook === 'function') {\n            this.inputElement.value = this.postprocessHook(feature);\n        } else {\n            this.inputElement.value = feature.properties.formatted;\n        }\n\n\n        this.notifyValueSelected(feature);\n\n        /* Close the list of autocompleted values: */\n        this.closeDropDownList();\n    }\n\n    private clearFieldAndNotify(event: MouseEvent) {\n        event.stopPropagation();\n        this.inputElement.value = '';\n        this.inputClearButton.classList.remove(\"visible\");\n\n        // Cancel previous request\n        if (this.currentPromiseReject) {\n            this.currentPromiseReject({\n                canceled: true\n            });\n            this.currentPromiseReject = null;\n        }\n\n        // Cancel previous timeout\n        if (this.currentTimeout) {\n            window.clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n\n        this.closeDropDownList();\n\n        // notify here\n        this.notifyValueSelected(null);\n    }\n\n    private closeDropDownList() {\n        if (this.autocompleteItemsElement) {\n            this.container.removeChild(this.autocompleteItemsElement);\n            this.autocompleteItemsElement = null;\n            this.notifyClosed();\n        }\n    }\n\n    private addIcon(element: HTMLElement, icon: string) {\n\n        //FortAwesome icons 5. Licence - https://fontawesome.com/license/free\n\n        const icons: { [key: string]: any } = {\n            \"close\": {\n                path: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\",\n                viewbox: \"0 0 24 24\"\n            },\n            \"map-marker\": {\n                path: \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\",\n                viewbox: \"0 0 384 512\"\n            },\n            \"road\": {\n                path: \"M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16c.5 4.72-3.21 8.84-7.96 8.84h-29.16c-4.75 0-8.46-4.12-7.96-8.84L267.91 64h-97.59c-11.93 0-22.76 7.29-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68c.86-8.14 7.72-14.32 15.91-14.32h68.8c8.19 0 15.05 6.18 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM260.4 135.16a8 8 0 0 1 7.96-7.16h39.29c4.09 0 7.53 3.09 7.96 7.16l4.6 43.58c.75 7.09-4.81 13.26-11.93 13.26h-40.54c-7.13 0-12.68-6.17-11.93-13.26l4.59-43.58zM315.64 304h-55.29c-9.5 0-16.91-8.23-15.91-17.68l5.07-48c.86-8.14 7.72-14.32 15.91-14.32h45.15c8.19 0 15.05 6.18 15.91 14.32l5.07 48c1 9.45-6.41 17.68-15.91 17.68z\",\n                viewbox: \"0 0 576 512\"\n            },\n            \"city\": {\n                path: \"M616 192H480V24c0-13.26-10.74-24-24-24H312c-13.26 0-24 10.74-24 24v72h-64V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v80h-64V16c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v80H24c-13.26 0-24 10.74-24 24v360c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V216c0-13.26-10.75-24-24-24zM128 404c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm128 192c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12V76c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 288c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40z\",\n                viewbox: \"0 0 640 512\"\n            }\n        }\n\n        var svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'svg');\n        svgElement.setAttribute('viewBox', icons[icon].viewbox);\n        svgElement.setAttribute('height', \"24\");\n\n        var iconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\n        iconElement.setAttribute(\"d\", icons[icon].path);\n        iconElement.setAttribute('fill', 'currentColor');\n        svgElement.appendChild(iconElement);\n        element.appendChild(svgElement);\n    }\n\n    private addFeatureIcon(element: HTMLElement, type: string, countryCode: string) {\n        const iconMap: any = {\n            'unknown': 'map-marker',\n            'amenity': 'map-marker',\n            'building': 'map-marker',\n            'street': 'road',\n            'suburb': 'city',\n            'district': 'city',\n            'postcode': 'city',\n            'city': 'city',\n            'county': 'city',\n            'state': 'city'\n        };\n\n        const countryData = countiesData.find(county => countryCode && county.code.toLowerCase() === countryCode.toLowerCase());\n\n        if ((type === 'country') && countryData) {\n            element.classList.add(\"emoji\");;\n            const emojiElement = document.createElement('span');\n            emojiElement.innerText = countryData.emoji;\n            element.appendChild(emojiElement);\n        } else if (iconMap[type]) {\n            this.addIcon(element, iconMap[type])\n        } else {\n            this.addIcon(element, 'map-marker');\n        }\n    }\n\n    private notifyValueSelected(feature: any) {\n\n        // Cancel previous place details request\n        if (this.currentPlaceDetailsPromiseReject) {\n            this.currentPlaceDetailsPromiseReject({\n                canceled: true\n            });\n            this.currentPlaceDetailsPromiseReject = null;\n        }\n\n        if (!this.options.addDetails || !feature || feature.properties.nonVerifiedParts?.length) {\n            this.changeCallbacks.forEach(callback => callback(feature));\n        } else {\n\n            let promise;\n\n            if (this.sendPlaceDetailsRequestAlt) {\n                promise = this.sendPlaceDetailsRequestAlt(feature, this)\n            } else {\n                promise = this.sendPlaceDetailsRequest(feature); \n            }\n\n            promise.then((detailesFeature: any) => {\n                this.changeCallbacks.forEach(callback => callback(detailesFeature));\n                this.currentPlaceDetailsPromiseReject = null;\n            }, (err) => {\n                if (!err.canceled) {\n                    console.log(err);\n                    this.changeCallbacks.forEach(callback => callback(feature));\n                    this.currentPlaceDetailsPromiseReject = null;\n                }\n            });\n        }\n    }\n\n    private notifySuggestions(features: any) {\n        this.suggestionsChangeCallbacks.forEach(callback => callback(features));\n    }\n\n    private notifyOpened() {\n        this.openCallbacks.forEach(callback => callback(true));\n    }\n\n    private notifyClosed() {\n        this.closeCallbacks.forEach(callback => callback(false));\n    }\n\n    private openDropdownAgain() {\n        const event = document.createEvent('Event');\n        event.initEvent('input', true, true);\n        this.inputElement.dispatchEvent(event);\n    }\n\n    private generatePlacesUrlUrl(placeId: string): string {\n        let url = `${this.placeDetailsUrl}?id=${placeId}&apiKey=${this.apiKey}`;\n        if (this.options.lang) {\n            url += `&lang=${this.options.lang}`;\n        }\n        return url;\n    }\n\n    private generateUrl(value: string): string {\n        let url = `${this.geocoderUrl}?text=${encodeURIComponent(value)}&apiKey=${this.apiKey}`;\n        // Add type of the location if set. Learn more about possible parameters on https://apidocs.geoapify.com/docs/geocoding/api/api\n        if (this.options.type) {\n            url += `&type=${this.options.type}`;\n        }\n\n        if (this.options.limit) {\n            url += `&limit=${this.options.limit}`;\n        }\n\n        if (this.options.lang) {\n            url += `&lang=${this.options.lang}`;\n        }\n\n        const filters = [];\n        const filterByCountryCodes: ByCountryCodeOptions = this.options.filter[this.BY_COUNTRYCODE] as ByCountryCodeOptions;\n        const filterByCircle: ByCircleOptions = this.options.filter[this.BY_CIRCLE] as ByCircleOptions;\n        const filterByRect: ByRectOptions = this.options.filter[this.BY_RECT] as ByRectOptions;\n        const filterByPlace: string = this.options.filter[this.BY_PLACE] as string;\n\n        if (filterByCountryCodes && filterByCountryCodes.length) {\n            filters.push(`countrycode:${filterByCountryCodes.join(',').toLowerCase()}`);\n        }\n\n        if (filterByCircle && this.isLatitude(filterByCircle.lat) && this.isLongitude(filterByCircle.lon) && filterByCircle.radiusMeters > 0) {\n            filters.push(`circle:${filterByCircle.lon},${filterByCircle.lat},${filterByCircle.radiusMeters}`);\n        }\n\n        if (filterByRect && this.isLatitude(filterByRect.lat1) && this.isLongitude(filterByRect.lon1) && this.isLatitude(filterByRect.lat2) && this.isLongitude(filterByRect.lon2)) {\n            filters.push(`rect:${filterByRect.lon1},${filterByRect.lat1},${filterByRect.lon2},${filterByRect.lat2}`);\n        }\n\n        if (filterByPlace) {\n            filters.push(`place:${filterByPlace}`);\n        }\n\n\n        url += filters.length ? `&filter=${filters.join('|')}` : '';\n\n        const bias = [];\n        const biasByCountryCodes: ByCountryCodeOptions = this.options.bias[this.BY_COUNTRYCODE] as ByCountryCodeOptions;\n        const biasByCircle: ByCircleOptions = this.options.bias[this.BY_CIRCLE] as ByCircleOptions;\n        const biasByRect: ByRectOptions = this.options.bias[this.BY_RECT] as ByRectOptions;\n        const biasByProximity: ByProximityOptions = this.options.bias[this.BY_PROXIMITY] as ByProximityOptions;\n\n        if (biasByCountryCodes && biasByCountryCodes.length) {\n            bias.push(`countrycode:${biasByCountryCodes.join(',').toLowerCase()}`);\n        }\n\n        if (biasByCircle && this.isLatitude(biasByCircle.lat) && this.isLongitude(biasByCircle.lon) && biasByCircle.radiusMeters > 0) {\n            bias.push(`circle:${biasByCircle.lon},${biasByCircle.lat},${biasByCircle.radiusMeters}`);\n        }\n\n        if (biasByRect && this.isLatitude(biasByRect.lat1) && this.isLongitude(biasByRect.lon1) && this.isLatitude(biasByRect.lat2) && this.isLongitude(biasByRect.lon2)) {\n            bias.push(`rect:${biasByRect.lon1},${biasByRect.lat1},${biasByRect.lon2},${biasByRect.lat2}`);\n        }\n\n        if (biasByProximity && this.isLatitude(biasByProximity.lat) && this.isLongitude(biasByProximity.lon)) {\n            bias.push(`proximity:${biasByProximity.lon},${biasByProximity.lat}`);\n        }\n\n        url += bias.length ? `&bias=${bias.join('|')}` : '';\n\n        return url;\n    }\n\n    private isLatitude(num: any) {\n        return num !== '' && num !== null && isFinite(num) && Math.abs(num) <= 90;\n    }\n\n    private isLongitude(num: any) {\n        return num !== '' && num !== null && isFinite(num) && Math.abs(num) <= 180;\n    }\n}\n\nexport interface GeocoderAutocompleteOptions {\n    type?: LocationType;\n    lang?: SupportedLanguage;\n    limit?: number;\n    placeholder?: string;\n    debounceDelay?: number;\n\n    filter?: { [key: string]: ByCircleOptions | ByCountryCodeOptions | ByRectOptions | string },\n    bias?: { [key: string]: ByCircleOptions | ByCountryCodeOptions | ByRectOptions | ByProximityOptions },\n\n    skipIcons?: boolean;\n\n/**\n * @deprecated The property should not be used; it is true by default. Use the addDetails property to add details.\n */\n    skipDetails?: boolean;\n\n    addDetails?: boolean;\n\n    skipSelectionOnArrowKey?: boolean;\n\n    // to remove in the next version\n    position?: GeoPosition;\n    countryCodes?: CountyCode[];\n\n    // extend results with non verified values if needed\n    allowNonVerifiedHouseNumber?: boolean;\n    allowNonVerifiedStreet?: boolean;\n}\n\nexport interface GeoPosition {\n    lat: number;\n    lon: number;\n}\n\nexport type ByCountryCodeOptions = CountyCode[];\n\nexport interface ByProximityOptions {\n    lon: number;\n    lat: number;\n}\n\nexport interface ByCircleOptions {\n    lon: number;\n    lat: number;\n    radiusMeters: number;\n}\n\nexport interface ByRectOptions {\n    lon1: number;\n    lat1: number;\n    lon2: number;\n    lat2: number;\n}\n\nexport type LocationType = 'country' | 'state' | 'city' | 'postcode' | 'street' | 'amenity';\nexport type SupportedLanguage = \"ab\" | \"aa\" | \"af\" | \"ak\" | \"sq\" | \"am\" | \"ar\" | \"an\" | \"hy\" | \"as\" | \"av\" | \"ae\" | \"ay\" | \"az\" | \"bm\" | \"ba\" | \"eu\" | \"be\" | \"bn\" | \"bh\" | \"bi\" | \"bs\" | \"br\" | \"bg\" | \"my\" | \"ca\" | \"ch\" | \"ce\" | \"ny\" | \"zh\" | \"cv\" | \"kw\" | \"co\" | \"cr\" | \"hr\" | \"cs\" | \"da\" | \"dv\" | \"nl\" | \"en\" | \"eo\" | \"et\" | \"ee\" | \"fo\" | \"fj\" | \"fi\" | \"fr\" | \"ff\" | \"gl\" | \"ka\" | \"de\" | \"el\" | \"gn\" | \"gu\" | \"ht\" | \"ha\" | \"he\" | \"hz\" | \"hi\" | \"ho\" | \"hu\" | \"ia\" | \"id\" | \"ie\" | \"ga\" | \"ig\" | \"ik\" | \"io\" | \"is\" | \"it\" | \"iu\" | \"ja\" | \"jv\" | \"kl\" | \"kn\" | \"kr\" | \"ks\" | \"kk\" | \"km\" | \"ki\" | \"rw\" | \"ky\" | \"kv\" | \"kg\" | \"ko\" | \"ku\" | \"kj\" | \"la\" | \"lb\" | \"lg\" | \"li\" | \"ln\" | \"lo\" | \"lt\" | \"lu\" | \"lv\" | \"gv\" | \"mk\" | \"mg\" | \"ms\" | \"ml\" | \"mt\" | \"mi\" | \"mr\" | \"mh\" | \"mn\" | \"na\" | \"nv\" | \"nb\" | \"nd\" | \"ne\" | \"ng\" | \"nn\" | \"no\" | \"ii\" | \"nr\" | \"oc\" | \"oj\" | \"cu\" | \"om\" | \"or\" | \"os\" | \"pa\" | \"pi\" | \"fa\" | \"pl\" | \"ps\" | \"pt\" | \"qu\" | \"rm\" | \"rn\" | \"ro\" | \"ru\" | \"sa\" | \"sc\" | \"sd\" | \"se\" | \"sm\" | \"sg\" | \"sr\" | \"gd\" | \"sn\" | \"si\" | \"sk\" | \"sl\" | \"so\" | \"st\" | \"es\" | \"su\" | \"sw\" | \"ss\" | \"sv\" | \"ta\" | \"te\" | \"tg\" | \"th\" | \"ti\" | \"bo\" | \"tk\" | \"tl\" | \"tn\" | \"to\" | \"tr\" | \"ts\" | \"tt\" | \"tw\" | \"ty\" | \"ug\" | \"uk\" | \"ur\" | \"uz\" | \"ve\" | \"vi\" | \"vo\" | \"wa\" | \"cy\" | \"wo\" | \"fy\" | \"xh\" | \"yi\" | \"yo\" | \"za\";\nexport type CountyCode = \"none\" | \"auto\" | \"ad\" | \"ae\" | \"af\" | \"ag\" | \"ai\" | \"al\" | \"am\" | \"an\" | \"ao\" | \"ap\" | \"aq\" | \"ar\" | \"as\" | \"at\" | \"au\" | \"aw\" | \"az\" | \"ba\" | \"bb\" | \"bd\" | \"be\" | \"bf\" | \"bg\" | \"bh\" | \"bi\" | \"bj\" | \"bm\" | \"bn\" | \"bo\" | \"br\" | \"bs\" | \"bt\" | \"bv\" | \"bw\" | \"by\" | \"bz\" | \"ca\" | \"cc\" | \"cd\" | \"cf\" | \"cg\" | \"ch\" | \"ci\" | \"ck\" | \"cl\" | \"cm\" | \"cn\" | \"co\" | \"cr\" | \"cu\" | \"cv\" | \"cx\" | \"cy\" | \"cz\" | \"de\" | \"dj\" | \"dk\" | \"dm\" | \"do\" | \"dz\" | \"ec\" | \"ee\" | \"eg\" | \"eh\" | \"er\" | \"es\" | \"et\" | \"eu\" | \"fi\" | \"fj\" | \"fk\" | \"fm\" | \"fo\" | \"fr\" | \"ga\" | \"gb\" | \"gd\" | \"ge\" | \"gf\" | \"gh\" | \"gi\" | \"gl\" | \"gm\" | \"gn\" | \"gp\" | \"gq\" | \"gr\" | \"gs\" | \"gt\" | \"gu\" | \"gw\" | \"gy\" | \"hk\" | \"hm\" | \"hn\" | \"hr\" | \"ht\" | \"hu\" | \"id\" | \"ie\" | \"il\" | \"in\" | \"io\" | \"iq\" | \"ir\" | \"is\" | \"it\" | \"jm\" | \"jo\" | \"jp\" | \"ke\" | \"kg\" | \"kh\" | \"ki\" | \"km\" | \"kn\" | \"kp\" | \"kr\" | \"kw\" | \"ky\" | \"kz\" | \"la\" | \"lb\" | \"lc\" | \"li\" | \"lk\" | \"lr\" | \"ls\" | \"lt\" | \"lu\" | \"lv\" | \"ly\" | \"ma\" | \"mc\" | \"md\" | \"me\" | \"mg\" | \"mh\" | \"mk\" | \"ml\" | \"mm\" | \"mn\" | \"mo\" | \"mp\" | \"mq\" | \"mr\" | \"ms\" | \"mt\" | \"mu\" | \"mv\" | \"mw\" | \"mx\" | \"my\" | \"mz\" | \"na\" | \"nc\" | \"ne\" | \"nf\" | \"ng\" | \"ni\" | \"nl\" | \"no\" | \"np\" | \"nr\" | \"nu\" | \"nz\" | \"om\" | \"pa\" | \"pe\" | \"pf\" | \"pg\" | \"ph\" | \"pk\" | \"pl\" | \"pm\" | \"pr\" | \"ps\" | \"pt\" | \"pw\" | \"py\" | \"qa\" | \"re\" | \"ro\" | \"rs\" | \"ru\" | \"rw\" | \"sa\" | \"sb\" | \"sc\" | \"sd\" | \"se\" | \"sg\" | \"sh\" | \"si\" | \"sj\" | \"sk\" | \"sl\" | \"sm\" | \"sn\" | \"so\" | \"sr\" | \"st\" | \"sv\" | \"sy\" | \"sz\" | \"tc\" | \"td\" | \"tf\" | \"tg\" | \"th\" | \"tj\" | \"tk\" | \"tm\" | \"tn\" | \"to\" | \"tr\" | \"tt\" | \"tv\" | \"tw\" | \"tz\" | \"ua\" | \"ug\" | \"um\" | \"us\" | \"uy\" | \"uz\" | \"va\" | \"vc\" | \"ve\" | \"vg\" | \"vi\" | \"vn\" | \"vu\" | \"wf\" | \"ws\" | \"ye\" | \"yt\" | \"za\" | \"zm\" | \"zw\";\n"],"names":["container","apiKey","inputElement","inputClearButton","autocompleteItemsElement","focusedItemIndex","currentItems","currentPromiseReject","currentPlaceDetailsPromiseReject","currentTimeout","changeCallbacks","suggestionsChangeCallbacks","inputCallbacks","openCallbacks","closeCallbacks","preprocessHook","postprocessHook","suggestionsFilter","sendGeocoderRequestAlt","sendPlaceDetailsRequestAlt","geocoderUrl","placeDetailsUrl","options","limit","debounceDelay","BY_COUNTRYCODE","BY_RECT","BY_CIRCLE","BY_PROXIMITY","BY_PLACE","constructor","this","filter","bias","countryCodes","addFilterByCountry","position","addBiasByProximity","document","createElement","classList","add","setAttribute","placeholder","appendChild","addIcon","addEventListener","clearFieldAndNotify","bind","onUserInput","onUserKeyPress","event","target","closeDropDownList","openDropdownAgain","setType","type","setLang","lang","setCountryCodes","codes","console","warn","setPosition","setLimit","setValue","value","remove","getValue","addFilterByCircle","filterByCircle","addFilterByRect","filterByRect","addFilterByPlace","filterByPlace","clearFilters","addBiasByCountry","addBiasByCircle","biasByCircle","addBiasByRect","biasByRect","biasByProximity","clearBias","on","operation","callback","indexOf","push","off","splice","once","current","currentListener","setSuggestionsFilter","suggestionsFilterFunc","setPreprocessHook","preprocessHookFunc","setPostprocessHook","postprocessHookFunc","setSendGeocoderRequestFunc","sendGeocoderRequestFunc","setSendPlaceDetailsRequestFunc","sendPlaceDetailsRequestFunc","isOpen","close","open","sendGeocoderRequest","Promise","resolve","reject","url","generateUrl","fetch","then","response","ok","json","data","sendPlaceDetailsRequest","feature","properties","datasource","sourcename","place_id","generatePlacesUrlUrl","features","length","currentValue","userEnteredValue","forEach","canceled","window","clearTimeout","setTimeout","promise","query","parsed","allowNonVerifiedHouseNumber","allowNonVerifiedStreet","extendByNonVerifiedValues","notifySuggestions","notifyOpened","index","itemElement","skipIcons","iconElement","addFeatureIcon","result_type","country_code","textElement","innerHTML","getStyledAddressSingleValue","getStyledAddress","e","stopPropagation","setValueAndNotify","err","log","addHouseNumberToFormatted","featureProperties","street","housenumber","houseNumberAndStreetFormatsPerCountry","format","Object","keys","find","key","replace","m","toUpperCase","addressPart","address_line1","address_line2","formatted","parsedAddress","rank","match_type","nonVerifiedParts","displayValue","valueIndex","toLowerCase","substring","mainPart","secondaryPart","parts","split","map","part","trim","name","slice","join","mainElements","Math","min","max","itemElements","getElementsByTagName","code","preventDefault","setActive","skipSelectionOnArrowKey","items","i","notifyValueSelected","removeChild","notifyClosed","element","icon","icons","path","viewbox","road","city","svgElement","createElementNS","countryCode","iconMap","unknown","amenity","building","suburb","district","postcode","county","state","countryData","countiesData","emojiElement","innerText","emoji","addDetails","detailesFeature","createEvent","initEvent","dispatchEvent","placeId","encodeURIComponent","filters","filterByCountryCodes","isLatitude","lat","isLongitude","lon","radiusMeters","lat1","lon1","lat2","lon2","biasByCountryCodes","num","isFinite","abs"],"mappings":"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"}